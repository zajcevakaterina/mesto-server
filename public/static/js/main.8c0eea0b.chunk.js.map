{"version":3,"sources":["images/header/logo.svg","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","utils/utils.js","components/FormValidator.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/ImagePopup.js","utils/api.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","className","src","logo","alt","CurrentUserContext","React","createContext","Card","card","onCardClick","onCardLike","onDeletePlace","onDeleteCardClick","currentUser","useContext","isOwn","owner","_id","userId","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","type","onClick","name","link","length","Main","this","context","userAvatar","onEditAvatar","userName","onEditProfile","userDescription","onAddPlace","cards","map","index","onCardDelete","key","Component","contextType","Footer","formValidationOptions","formSelector","inputSelector","submitButtonSelector","inactiveButtonClass","inputErrorClass","errorClass","FormValidator","options","formEl","_options","_formEl","_inputList","_findInputs","_buttonEl","_findButtons","forEach","inputEl","addEventListener","_checkInputValidity","_toggleButtonState","Array","from","querySelectorAll","querySelector","validity","valid","_hideInputErrorMessage","_showInputErrorMessage","validationMessage","message","errorEl","document","id","classList","add","textContent","remove","checkValidity","disabled","input","evt","preventDefault","_setEventInputListeners","PopupWithForm","useEffect","form","enableValidation","isOpen","onClose","noValidate","onSubmit","title","children","value","buttonText","EditProfilePopup","onUpdateUser","isLoading","useState","setName","description","setDescription","e","Fragment","placeholder","minLength","maxLength","required","onChange","target","ImagePopup","api","baseUrl","headers","response","ok","json","console","log","status","Promise","reject","statusText","error","fetch","then","_handleResponse","catch","_handleResponseError","job","method","body","JSON","stringify","about","avatar","cardId","authorization","EditAvatarPopup","onUpdateAvatar","avatarRef","useRef","current","ref","AddPlacePopup","cardName","setCardName","cardLink","setCardLink","App","handleEditAvatarClick","setState","isEditAvatarPopupOpen","handleEditProfileClick","isEditProfilePopupOpen","handleAddPlaceClick","isAddPlacePopupOpen","handleDeletePlaceClick","isDeletePlacePopupOpen","handleCardClick","selectedCard","closeAllPopups","setIsLoadingState","popup","state","handleUpdateUser","setUserInfo","info","err","finally","handleUpdateAvatar","setUserAvatar","changeCardLike","changeLikeCardStatus","newCard","newCards","c","handleCardDelete","deleteCard","res","filter","handleAddPlaceSubmit","addCard","editProfileData","editAvatar","addPlace","getUserInfo","getInitialCards","Provider","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8c0eea0b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.e889e45f.svg\";","import React from 'react';\nimport logo from '../../images/header/logo.svg'\n\nfunction Header(props) {\n  return (\n    <header className=\"header app__section\">\n      <img src={logo} alt=\"Слово Место латиницей и выше слово Russia. Логотип.\"\n        className=\"header__logo\"/>\n    </header>\n  )\n}\n\nexport default Header\n","import React from 'react'\n\nconst CurrentUserContext = React.createContext()\n\nexport default CurrentUserContext\n","import React from 'react';\nimport CurrentUserContext from '../contexts/CurrentUserContext';\n\nfunction Card({ card, onCardClick, onDeletePlace, onCardLike, onDeleteCardClick }) {\n\n  const currentUser = React.useContext(CurrentUserContext);\n\n  const isOwn = card.owner._id === currentUser.userId;\n\n  const cardDeleteButtonClassName = (\n    `places__delete-button ${isOwn ? 'places__delete-button_active' : ''}`\n  );\n\n  const isLiked = card.likes.some(i => i._id === currentUser.userId);\n  const cardLikeButtonClassName = (\n    `places__like ${isLiked ? 'places__like_active' : ''}`\n  );\n\n  const handleLikeClick = () => {\n    onCardLike(card)\n  }\n\n  const handleDeleteClick = () => {\n    onDeleteCardClick(card._id)\n  }\n  return (\n    <div className=\"places__card\">\n      <button type=\"button\" className={cardDeleteButtonClassName} onClick={handleDeleteClick}></button>\n      <img alt={`Фотография места под названием ${card.name}`} src={card.link} className=\"places__image\" onClick={() => onCardClick(card)} />\n      <div className=\"places__desc\">\n        <h2 className=\"places__title\">{card.name}</h2>\n        <div className=\"places__like-info\">\n          <button type=\"button\" className={cardLikeButtonClassName} onClick={handleLikeClick}></button>\n          <span className=\"places__like-amount\">{card.likes.length}</span>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Card\n","import React from 'react';\nimport Card from './Card';\nimport CurrentUserContext from '../contexts/CurrentUserContext';\n\nclass Main extends React.Component {\n\n  static contextType = CurrentUserContext;\n\n  render() {\n    return (\n      <main className=\"main app__section\">\n        <section className=\"profile\">\n          <img alt=\"Фотография пользователя.\" className=\"profile__avatar\" src={this.context.userAvatar} />\n          <div className=\"profile__edit-avatar-button\" onClick={this.props.onEditAvatar}></div>\n          <div className=\"profile__title\">\n            <h1 className=\"profile__name\">{this.context.userName}</h1>\n            <button type=\"button\" className=\"profile__edit-button\" onClick={this.props.onEditProfile}></button>\n          </div>\n          <p className=\"profile__subtitle\">{this.context.userDescription}</p>\n          <button type=\"button\" className=\"profile__add-button\" onClick={this.props.onAddPlace}></button>\n        </section>\n\n        <section className=\"places\">\n          {this.props.cards.map((card, index) => {\n            return (\n              <Card\n                onCardLike={this.props.onCardLike}\n                onCardClick={this.props.onCardClick}\n                onDeletePlace={this.props.onDeletePlace}\n                onDeleteCardClick={this.props.onCardDelete}\n                card={card}\n                key={index} />\n            )\n          })}\n        </section>\n      </main>\n    )\n  }\n}\n\nexport default Main\n","import React from 'react';\n\nfunction Footer(props) {\n  return (\n    <footer className=\"footer app__section\">\n      <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\n    </footer>\n  )\n}\n\nexport default Footer\n","// Селекторы для валидации форм\nexport const formValidationOptions = {\n  formSelector: '.form',\n  inputSelector: '.form__item',\n  submitButtonSelector: '.form__button',\n  inactiveButtonClass: 'form__button_inactive',\n  inputErrorClass: 'form__item_type_error',\n  errorClass: 'form__item-error_active'\n}\n","export default class FormValidator {\n  constructor(options, formEl) {\n    this._options = options;\n    this._formEl = formEl;\n  }\n\n  _setEventInputListeners() { // установка слушателей и обработчиков событий на все инпуты в форме\n    this._inputList = this._findInputs();\n    this._buttonEl = this._findButtons();\n    this._inputList.forEach((inputEl) => {\n      inputEl.addEventListener('input', () => {\n        this._checkInputValidity(inputEl, this._options.errorClass, this._options.inputErrorClass);\n        this._toggleButtonState();\n      });\n    });\n  };\n\n  _findInputs() {\n    return Array.from(this._formEl.querySelectorAll(this._options.inputSelector));\n  }\n\n  _findButtons() {\n    return this._formEl.querySelector(this._options.submitButtonSelector);\n  }\n\n  _checkInputValidity(inputEl, errorClass, inputErrorClass) { // проверка конкретного инпута на валидность\n    if (!inputEl.validity.valid) {\n      this._showInputErrorMessage(inputEl, inputEl.validationMessage, errorClass, inputErrorClass);\n    } else {\n      this._hideInputErrorMessage(inputEl, errorClass, inputErrorClass);\n    }\n  }\n\n  _showInputErrorMessage(inputEl, message, errorClass, inputErrorClass) { // отображение текста с ошибкой\n    const errorEl = document.querySelector(`#${inputEl.id}-error`);\n    errorEl.classList.add(errorClass);\n    errorEl.textContent = message;\n    inputEl.classList.add(inputErrorClass);\n  }\n\n  _hideInputErrorMessage(inputEl, errorClass, inputErrorClass) { // скрытие текста с ошибкой\n    const errorEl = document.querySelector(`#${inputEl.id}-error`);\n    errorEl.classList.remove(errorClass);\n    errorEl.textContent = '';\n    inputEl.classList.remove(inputErrorClass);\n  }\n\n  _toggleButtonState() { // переключение состояния кнопки в зависимости от валидности всей формы\n    const isValid = this._formEl.checkValidity();\n    if (isValid) {\n      this._buttonEl.classList.remove(this._options.inactiveButtonClass);\n      this._buttonEl.disabled = false;\n    } else {\n      this._buttonEl.classList.add(this._options.inactiveButtonClass);\n      this._buttonEl.disabled = true;\n    }\n  }\n\n  formInitialCheck() { // проверка на валидность и установка состояния кнопки + обнуление сообщений об ошибке\n    this._toggleButtonState();\n    this._inputList.forEach((input) => {\n      this._hideInputErrorMessage(input, this._options.errorClass, this._options.inputErrorClass);\n    })\n  }\n\n  enableValidation() {\n    this._formEl.addEventListener('submit', (evt) => evt.preventDefault());\n    this._setEventInputListeners();\n  }\n}\n","import React, { useEffect } from 'react';\nimport { formValidationOptions } from '../utils/utils'\nimport FormValidator from './FormValidator';\n\nfunction PopupWithForm(props) {\n\n  useEffect(() => {\n    const form = document.querySelector(`.form_type_${props.name}`);\n    const validator = new FormValidator(formValidationOptions, form);\n    validator.enableValidation();\n  })\n\n  return (\n    <div className={`popup popup_type_${props.name} ` + (props.isOpen ? 'popup_opened' : '')}>\n      <div className=\"popup__container popup__container_visibility_visible\">\n        <button type=\"button\" className=\"popup__close-button\" onClick={props.onClose}></button>\n        <form\n          className={`form form_type_${props.name}`}\n          name={props.name}\n          noValidate\n          onSubmit={props.onSubmit} >\n          <h2 className=\"form__heading\">{props.title}</h2>\n\n          {props.children}\n\n          <button\n            type=\"submit\"\n            value=\"Сохранить форму\"\n            className={`form__button form__button_type_${props.name}`}>\n            {props.buttonText}\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default PopupWithForm;\n","import React, { useState, useEffect } from 'react';\nimport CurrentUserContext from '../contexts/CurrentUserContext';\nimport PopupWithForm from './PopupWithForm';\n\nfunction EditProfilePopup({ isOpen, onClose, onUpdateUser, isLoading }) {\n  const currentUser = React.useContext(CurrentUserContext);\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n\n  const handleChangeName = (e) => {\n    setName(e.target.value);\n  }\n\n  const handleChangeDescription = (e) => {\n    setDescription(e.target.value);\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onUpdateUser(\n      name,\n      description);\n    onClose()\n  }\n\n  useEffect(() => {\n    setName(currentUser.userName);\n    setDescription(currentUser.userDescription);\n  }, [currentUser]);\n\n\n  return (\n    <PopupWithForm\n      onSubmit={handleSubmit}\n      isOpen={isOpen}\n      title='Редактировать профиль'\n      name='edit-profile'\n      onClose={onClose}\n      buttonText={isLoading ? \"Сохранение...\": \"Сохранить\"}\n      children={(\n        <React.Fragment>\n          <label className=\"form__field\">\n            <input\n              type=\"text\"\n              name=\"name\"\n              id=\"profile-name\"\n              className=\"form__item form__item_el_name\"\n              placeholder=\"Имя и фамилия\"\n              minLength=\"2\"\n              maxLength=\"40\"\n              required\n              value={name}\n              onChange={handleChangeName} />\n            <span className=\"form__item-error\" id=\"profile-name-error\"></span>\n          </label>\n\n          <label className=\"form__field\">\n            <input\n              type=\"text\"\n              name=\"job\"\n              id=\"profile-job\"\n              placeholder=\"Род занятий\"\n              className=\"form__item form__item_el_job\"\n              minLength=\"2\"\n              maxLength=\"200\"\n              required\n              value={description}\n              onChange={handleChangeDescription}\n            />\n            <span className=\"form__item-error\" id=\"profile-job-error\"></span>\n          </label>\n        </React.Fragment>)\n      } />\n  )\n}\n\nexport default EditProfilePopup\n","import React from 'react';\n\nfunction ImagePopup({ card, onClose }) {\n  return (\n    <div className={\"popup popup_type_see-image \" + (card ? 'popup_opened' : '')}>\n      {card\n      && <figure className=\"popup__container popup__container_visibility_transparent\">\n        <button type=\"button\" className=\"popup__close-button\" onClick={onClose}></button>\n        <img alt={`Фотография места под названием ${card.name}`} className=\"popup__image\" src={card.link} />\n        <figcaption className=\"popup__image-caption\">{card.name}</figcaption>\n      </figure>}\n    </div>\n  )\n}\n\nexport default ImagePopup\n","const config = {\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-13',\n  headers: {\n    authorization: 'ac8eea58-1ab3-4780-8fbf-f684bd9ab1b3',\n    'Content-Type': 'application/json'\n  }\n};\n\nclass Api {\n  constructor(options) {\n    this.baseUrl = options.baseUrl;\n    this.headers = options.headers;\n  }\n\n  _handleResponse(response) {\n    if (response.ok) {\n      return response.json();\n    } else {\n      console.log(`Ошибка: ${response.status}`)\n      return Promise.reject(response.statusText)\n    }\n  }\n\n  _handleResponseError(error) {\n    console.log(`Ошибка: ${error.message}`)\n    return Promise.reject(error.message)\n  }\n\n  getUserInfo() {\n    return fetch(`${this.baseUrl}/users/me`, {\n      headers: this.headers\n    })\n      .then(this._handleResponse)\n      .catch(this._handleResponseError);\n  }\n\n  setUserInfo(name, job) {\n    return fetch(`${this.baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this.headers,\n      body: JSON.stringify({\n        name: name,\n        about: job,\n      })\n    })\n      .then(this._handleResponse)\n      .catch(this._handleResponseError)\n  }\n\n  setUserAvatar(link) {\n    return fetch(`${this.baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this.headers,\n      body: JSON.stringify({\n        avatar: link\n      })\n    })\n      .then(this._handleResponse)\n      .catch(this._handleResponseError)\n  }\n\n  getInitialCards() {\n    return fetch(`${this.baseUrl}/cards`, {\n      headers: this.headers\n    })\n      .then(this._handleResponse)\n      .catch(this._handleResponseError);\n  }\n\n  addCard(name, link) {\n    return fetch(`${this.baseUrl}/cards`, {\n      method: 'POST',\n      headers: this.headers,\n      body: JSON.stringify({\n        name: name,\n        link: link\n      })\n    })\n      .then(this._handleResponse)\n      .catch(this._handleResponseError);\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this.baseUrl}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this.headers,\n    })\n      .then(this._handleResponse)\n      .catch(this._handleResponseError);\n  }\n\n  changeLikeCardStatus(cardId, isLiked) {\n    if (isLiked) {\n      return fetch(`${this.baseUrl}/cards/likes/${cardId}`, {\n        method: 'PUT',\n        headers: this.headers,\n      })\n        .then(this._handleResponse)\n        .catch(this._handleResponseError);\n    }\n    return fetch(`${this.baseUrl}/cards/likes/${cardId}`, {\n      method: 'DELETE',\n      headers: this.headers,\n    })\n      .then(this._handleResponse)\n      .catch(this._handleResponseError);\n  }\n\n\n  // addLike(cardId) {\n  //   return fetch(`${this.baseUrl}/cards/likes/${cardId}`, {\n  //     method: 'PUT',\n  //     headers: this.headers,\n  //   })\n  //   .then(this._handleResponse)\n  //   .catch(this._handleResponseError);\n  // }\n\n  // deleteLike(cardId) {\n  //   return fetch(`${this.baseUrl}/cards/likes/${cardId}`, {\n  //     method: 'DELETE',\n  //     headers: this.headers,\n  //   })\n  //   .then(this._handleResponse)\n  //   .catch(this._handleResponseError);\n  // }\n}\n\nconst api = new Api(config);\nexport default api;\n","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction EditAvatarPopup({ isOpen, onClose, onUpdateAvatar, isLoading }) {\n\n  const avatarRef = React.useRef();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onUpdateAvatar({\n      avatar: avatarRef.current.value\n    });\n    onClose();\n    avatarRef.current.value = ''\n  }\n\n  return (\n    <PopupWithForm\n      onSubmit={handleSubmit}\n      isOpen={isOpen}\n      title='Обновить аватар'\n      name='edit-avatar'\n      onClose={onClose}\n      buttonText={isLoading ? \"Сохранение...\" : \"Сохранить\"}\n      children={(\n        <React.Fragment>\n          <label className=\"form__field\">\n            <input\n              type=\"url\"\n              name=\"link\"\n              id=\"avatar-link\"\n              placeholder=\"Ссылка на аватар\"\n              className=\"form__item form__item_el_avatar-link\"\n              required\n              value={avatarRef.value}\n              ref={avatarRef} />\n            <span className=\"form__item-error\" id=\"avatar-link-error\"></span>\n          </label>\n        </React.Fragment>\n      )} />\n  )\n}\n\nexport default EditAvatarPopup\n","import React, { useState } from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction AddPlacePopup({ isOpen, onClose, onAddPlace, isLoading }) {\n  const [cardName, setCardName] = useState('');\n  const [cardLink, setCardLink] = useState('');\n\n  const handleCardName = (e) => {\n    setCardName(e.target.value);\n  }\n\n  const handleCardLink = (e) => {\n    setCardLink(e.target.value);\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onAddPlace(cardName, cardLink);\n    onClose()\n    setCardName('');\n    setCardLink('');\n  }\n\n  return (\n    <PopupWithForm\n      onSubmit={handleSubmit}\n      isOpen={isOpen}\n      title='Новое место'\n      name='add-place'\n      onClose={onClose}\n      buttonText={isLoading ? \"Сохранение...\" : \"Создать\"}\n      children={(\n        <React.Fragment>\n          <label className=\"form__field\">\n            <input\n              type=\"text\"\n              name=\"name\"\n              id=\"place-name\"\n              className=\"form__item form__item_el_place-name\"\n              minLength=\"1\"\n              maxLength=\"30\"\n              placeholder=\"Название\"\n              required\n              value={cardName}\n              onChange={handleCardName} />\n            <span className=\"form__item-error\" id=\"place-name-error\"></span>\n          </label>\n\n          <label className=\"form__field\">\n            <input\n              type=\"url\"\n              name=\"link\"\n              id=\"place-link\"\n              placeholder=\"Ссылка на картинку\"\n              className=\"form__item form__item_el_place-link\"\n              required\n              value={cardLink}\n              onChange={handleCardLink} />\n            <span className=\"form__item-error\" id=\"place-link-error\"></span>\n          </label>\n        </React.Fragment>\n      )} />\n  )\n}\n\nexport default AddPlacePopup\n","import React from 'react';\nimport './App.css';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport EditProfilePopup from './EditProfilePopup';\nimport ImagePopup from './ImagePopup';\nimport api from '../utils/api';\nimport CurrentUserContext from '../contexts/CurrentUserContext'\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEditProfilePopupOpen: false,\n      isAddPlacePopupOpen: false,\n      isEditAvatarPopupOpen: false,\n      isDeletePlacePopupOpen: false,\n      selectedCard: null,\n      currentUser: {\n        userName: '',\n        userDescription: '',\n        userAvatar: '',\n        userId: ''\n      },\n      cards: [],\n      isLoading: {\n        editProfileData: false,\n        editAvatar: false,\n        addPlace: false\n      }\n    }\n  }\n\n  handleEditAvatarClick = () => {\n    this.setState({\n      isEditAvatarPopupOpen: true\n    });\n  }\n\n  handleEditProfileClick = () => {\n    this.setState({\n      isEditProfilePopupOpen: true\n    });\n  }\n\n  handleAddPlaceClick = () => {\n    this.setState({\n      isAddPlacePopupOpen: true\n    });\n  }\n\n  handleDeletePlaceClick = () => {\n    this.setState({\n      isDeletePlacePopupOpen: true\n    });\n  }\n\n  handleCardClick = (card) => {\n    this.setState({\n      selectedCard: card\n    })\n  }\n\n  closeAllPopups = () => {\n    this.setState({\n      isEditProfilePopupOpen: false,\n      isAddPlacePopupOpen: false,\n      isEditAvatarPopupOpen: false,\n      isDeletePlacePopupOpen: false,\n      selectedCard: null\n    });\n  }\n\n  setIsLoadingState = (popup) => {\n    this.setState({\n      isLoading: {\n        ...this.state.isLoading,\n        [popup]: !this.state.isLoading[popup]\n      }\n    })\n  }\n\n  handleUpdateUser = (name, description) => {\n    this.setIsLoadingState('editProfileData')\n    api\n      .setUserInfo(name, description)\n      .then(info =>\n        this.setState({\n          currentUser: {\n            ...this.state.currentUser,\n            userName: info.name,\n            userDescription: info.about\n          }\n        }))\n      .catch(err => console.error(err))\n      .finally(() =>\n        this.setIsLoadingState('editProfileData')\n      )\n  }\n\n  handleUpdateAvatar = (avatar) => {\n    this.setIsLoadingState('editAvatar')\n    api\n      .setUserAvatar(avatar)\n      .then(info =>\n        this.setState({\n          currentUser: {\n            ...this.state.currentUser,\n            userAvatar: info.avatar\n          }\n        }))\n      .catch(err => console.error(err))\n      .finally(() => {\n        this.setIsLoadingState('editAvatar')\n      })\n  }\n\n  changeCardLike = (card) => {\n    const isLiked = card.likes.some(i => i._id === this.state.currentUser.userId);\n    api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n      const newCards = this.state.cards.map((c) => c._id === card._id ? newCard : c);\n      this.setState({\n        cards: newCards\n      });\n    })\n      .catch(err => console.error(err));\n  }\n\n  handleCardDelete = (cardId) => {\n    api.deleteCard(cardId).then((res) => {\n      const newCards = this.state.cards.filter((c) => c._id !== cardId);\n      this.setState({\n        cards: newCards\n      });\n    })\n      .catch(err => console.error(err));\n  }\n\n  handleAddPlaceSubmit = (name, link) => {\n    this.setIsLoadingState('addPlace')\n    api\n      .addCard(name, link)\n      .then((newCard) => {\n        this.setState({\n          cards: [...this.state.cards, newCard]\n        })\n      })\n      .catch(err => console.error(err))\n      .finally(() => {\n        this.setIsLoadingState('addPlace')\n      })\n  }\n\n  componentDidMount() {\n    api\n      .getUserInfo()\n      .then(info =>\n        this.setState({\n          currentUser: {\n            userName: info.name,\n            userDescription: info.about,\n            userAvatar: info.avatar,\n            userId: info._id\n          }\n        }))\n      .catch(err => console.error(err));\n    api\n      .getInitialCards()\n      .then(cards => this.setState({\n        cards\n      }))\n      .catch(err => console.error(err))\n  }\n\n  render() {\n    return (\n      <CurrentUserContext.Provider value={this.state.currentUser}>\n        <div className=\"app\">\n          <Header />\n          <Main\n            cards={this.state.cards}\n            onCardLike={this.changeCardLike}\n            onCardDelete={this.handleCardDelete}\n            onEditAvatar={this.handleEditAvatarClick}\n            onEditProfile={this.handleEditProfileClick}\n            onAddPlace={this.handleAddPlaceClick}\n            onCardClick={this.handleCardClick}\n            onDeletePlace={this.handleDeletePlaceClick} />\n          <Footer />\n\n          <section className=\"popups\">\n            <EditProfilePopup\n              isLoading={this.state.isLoading.editProfileData}\n              isOpen={this.state.isEditProfilePopupOpen}\n              onClose={this.closeAllPopups}\n              onUpdateUser={(name, description) => this.handleUpdateUser(name, description)} />\n\n            <EditAvatarPopup\n              isLoading={this.state.isLoading.editAvatar}\n              isOpen={this.state.isEditAvatarPopupOpen}\n              onClose={this.closeAllPopups}\n              onUpdateAvatar={({ avatar }) => this.handleUpdateAvatar(avatar)}\n            />\n\n            <AddPlacePopup\n              isLoading={this.state.isLoading.addPlace}\n              isOpen={this.state.isAddPlacePopupOpen}\n              onClose={this.closeAllPopups}\n              onAddPlace={this.handleAddPlaceSubmit}\n            />\n\n            <PopupWithForm\n              isOpen={this.state.isDeletePlacePopupOpen}\n              title='Вы уверены?'\n              name='delete-place'\n              onClose={this.closeAllPopups}\n              buttonText='Да'\n            />\n\n            <ImagePopup\n              card={this.state.selectedCard}\n              onClose={this.closeAllPopups} />\n\n          </section>\n        </div>\n      </CurrentUserContext.Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}